version:  '2.0'
services:
  # eureka:
  #   image: eureka:v1
  #   build: eureka-registry/
  #   restart: always
  #   container_name: eureka-container
  #   network_mode: host
  #   ports:
  #     - 8091:8091 

  #   expose:
  #     - 8091

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    expose:
      - 2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  kafka:
    image: wurstmeister/kafka:0.10.2.0
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.23.239.245
      KAFKA_CREATE_TOPICS: "education:1:1"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.23.239.245:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: always

  education-service:
    image: education-service:v1
    build: EducationService/
    restart: always
    container_name: education-container
    network_mode: host
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    expose:
      - "8082"
  certification-service:
    image: certification-service:v1
    build: CertificationService/
    restart: always
    container_name: certification-container
    network_mode: host
    depends_on:
      - kafka
    ports:
      - "8085:8085"
    expose:
      - "8085"
  experience-service:
    image: experience-service:v1
    build: ExperienceService/
    restart: always
    container_name: experience-container
    network_mode: host
    depends_on:
    - kafka
    ports:
    - "8087:8087"
    expose:
    - "8087"
  location-service:
    image: location-service:v1
    build: LocationService/
    restart: always
    container_name: experience-container
    network_mode: host
    depends_on:
    - kafka
    ports:
    - "8084:8084"
    expose:
    - "8084"
  project-service:
    image: project-service:v1
    build: ProjectService/
    restart: always
    container_name: project-container
    network_mode: host
    depends_on:
    - kafka
    ports:
    - "8083:8083"
    expose:
    - "8083"
  registration-service:
    image: registration-service:v1
    build: RegistrationService/
    restart: always
    container_name: registration-container
    network_mode: host
    depends_on:
    - kafka
    ports:
    - "8083:8083"
    expose:
    - "8083"
  skill-service:
    image: skill-service:v1
    build: SkillService/
    restart: always
    container_name: skill-container
    network_mode: host
    depends_on:
      - kafka
    ports:
    - "8081:8081"
    expose:
    - "8081"

  upstream-service:
    image: upstream-service:v1
    build: UpstreamService/
    restart: always
    container_name: upstream-container
    network_mode: host
    depends_on:
    - kafka
    ports:
    - "9191:9191"
    expose:
    - "9191"
  downstream-service:
    image: downstream-service:v1
    build: DownstreamService/
    restart: always
    container_name: downstream-container
    network_mode: host
    depends_on:
      - kafka
    ports:
      - "8090:8090"
    expose:
      - "8090"
  # config-server:
  #   image: config-server:v1
  #   build: config-server/
  #   restart: always
  #   container_name: config-container
  #   network_mode: host
  #   depends_on:
  #     - eureka
  #   ports:
  #     - 8092:8092
  #   expose:
  #     - 8092

  # mongodb:
  #   image: mongo:3.2-jessie
  #   ports:
  #     - "27017:27017"
  #   container_name: mongo-movie
  #   network_mode: host
  #   depends_on:
  #     - config-server
  #   volumes:
  #     - '/home/cgi/data/mysql:/data/db'

#  movie-demo:
#    image: movie-mongo:v1
#    build: movie-cruiser-app/
#    restart: always
#    container_name: mongo-demo-compose
#    network_mode: host
#    depends_on:
#      - mongodb
#    ports:
#      - 8090:8090
#    expose:
#      - 8090

  # gateway:
  #   image: zuulgateway:v1
  #   build: zuulgateway/
  #   restart: always
  #   container_name: zuul-container
  #   network_mode: host
  #   depends_on:
  #     - mongodb
  #   ports:
  #     - 8081:8081
  #   expose:
  #     - 8081
